
matmul:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 32 2f 00 00    	push   QWORD PTR [rip+0x2f32]        # 3f58 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 33 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f33]        # 3f60 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	68 0c 00 00 00       	push   0xc
    10f9:	f2 e9 21 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ff:	90                   	nop

Disassembly of section .plt.got:

0000000000001100 <__cxa_finalize@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 c5 2e 00 00 	bnd jmp QWORD PTR [rip+0x2ec5]        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001110 <__printf_chk@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 4d 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e4d]        # 3f68 <__printf_chk@GLIBC_2.3.4>
    111b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <GOMP_parallel_loop_nonmonotonic_dynamic@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 45 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e45]        # 3f70 <GOMP_parallel_loop_nonmonotonic_dynamic@GOMP_4.5>
    112b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <rand@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 3d 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e3d]        # 3f78 <rand@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <GOMP_loop_end_nowait@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 35 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e35]        # 3f80 <GOMP_loop_end_nowait@GOMP_1.0>
    114b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <posix_memalign@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 2d 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e2d]        # 3f88 <posix_memalign@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <__assert_fail@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 25 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e25]        # 3f90 <__assert_fail@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <__cxa_atexit@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 1d 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e1d]        # 3f98 <__cxa_atexit@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <clock_gettime@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 15 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e15]        # 3fa0 <clock_gettime@GLIBC_2.17>
    118b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <__stack_chk_fail@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 0d 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e0d]        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    119b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011a0 <free@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 05 2e 00 00 	bnd jmp QWORD PTR [rip+0x2e05]        # 3fb0 <free@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011b0 <GOMP_loop_nonmonotonic_dynamic_next@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 fd 2d 00 00 	bnd jmp QWORD PTR [rip+0x2dfd]        # 3fb8 <GOMP_loop_nonmonotonic_dynamic_next@GOMP_4.5>
    11bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011c0 <putchar@plt>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	f2 ff 25 f5 2d 00 00 	bnd jmp QWORD PTR [rip+0x2df5]        # 3fc0 <putchar@GLIBC_2.2.5>
    11cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000011d0 <_ZNSt8ios_base4InitC1Ev@plt>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	f2 ff 25 ed 2d 00 00 	bnd jmp QWORD PTR [rip+0x2ded]        # 3fc8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    11db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000011e0 <main>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	41 57                	push   r15
    11e6:	bf 04 00 00 00       	mov    edi,0x4
    11eb:	41 56                	push   r14
    11ed:	41 55                	push   r13
    11ef:	41 54                	push   r12
    11f1:	55                   	push   rbp
    11f2:	53                   	push   rbx
    11f3:	48 83 ec 78          	sub    rsp,0x78
    11f7:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
    11fc:	48 89 ee             	mov    rsi,rbp
    11ff:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1206:	00 00 
    1208:	48 89 44 24 68       	mov    QWORD PTR [rsp+0x68],rax
    120d:	31 c0                	xor    eax,eax
    120f:	e8 6c ff ff ff       	call   1180 <clock_gettime@plt>
    1214:	bf 00 00 02 00       	mov    edi,0x20000
    1219:	4c 69 6c 24 40 00 ca 	imul   r13,QWORD PTR [rsp+0x40],0x3b9aca00
    1220:	9a 3b 
    1222:	4c 8b 74 24 48       	mov    r14,QWORD PTR [rsp+0x48]
    1227:	e8 04 05 00 00       	call   1730 <_ZL10_mm_mallocmm.constprop.0>
    122c:	48 89 c3             	mov    rbx,rax
    122f:	bf 00 00 10 00       	mov    edi,0x100000
    1234:	48 89 44 24 30       	mov    QWORD PTR [rsp+0x30],rax
    1239:	e8 f2 04 00 00       	call   1730 <_ZL10_mm_mallocmm.constprop.0>
    123e:	c4 e1 f9 6e eb       	vmovq  xmm5,rbx
    1243:	c4 e3 d1 22 e0 01    	vpinsrq xmm4,xmm5,rax,0x1
    1249:	bf 00 00 02 00       	mov    edi,0x20000
    124e:	c5 f9 7f 64 24 10    	vmovdqa XMMWORD PTR [rsp+0x10],xmm4
    1254:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    1259:	e8 d2 04 00 00       	call   1730 <_ZL10_mm_mallocmm.constprop.0>
    125e:	bf 00 00 02 00       	mov    edi,0x20000
    1263:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
    1268:	e8 c3 04 00 00       	call   1730 <_ZL10_mm_mallocmm.constprop.0>
    126d:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    1272:	49 89 df             	mov    r15,rbx
    1275:	48 8d 9b 00 00 02 00 	lea    rbx,[rbx+0x20000]
    127c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1280:	e8 ab fe ff ff       	call   1130 <rand@plt>
    1285:	c5 c8 57 f6          	vxorps xmm6,xmm6,xmm6
    1289:	c5 ca 2a c0          	vcvtsi2ss xmm0,xmm6,eax
    128d:	49 83 c7 04          	add    r15,0x4
    1291:	c5 fa 59 05 93 0e 00 	vmulss xmm0,xmm0,DWORD PTR [rip+0xe93]        # 212c <_IO_stdin_used+0x12c>
    1298:	00 
    1299:	c4 c1 7a 11 47 fc    	vmovss DWORD PTR [r15-0x4],xmm0
    129f:	49 39 df             	cmp    r15,rbx
    12a2:	75 dc                	jne    1280 <main+0xa0>
    12a4:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    12a9:	49 89 c7             	mov    r15,rax
    12ac:	48 8d 98 00 00 10 00 	lea    rbx,[rax+0x100000]
    12b3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    12b8:	e8 73 fe ff ff       	call   1130 <rand@plt>
    12bd:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    12c1:	c5 c2 2a c0          	vcvtsi2ss xmm0,xmm7,eax
    12c5:	49 83 c7 04          	add    r15,0x4
    12c9:	c5 fa 59 05 5b 0e 00 	vmulss xmm0,xmm0,DWORD PTR [rip+0xe5b]        # 212c <_IO_stdin_used+0x12c>
    12d0:	00 
    12d1:	c4 c1 7a 11 47 fc    	vmovss DWORD PTR [r15-0x4],xmm0
    12d7:	49 39 df             	cmp    r15,rbx
    12da:	75 dc                	jne    12b8 <main+0xd8>
    12dc:	48 89 ee             	mov    rsi,rbp
    12df:	bf 04 00 00 00       	mov    edi,0x4
    12e4:	e8 97 fe ff ff       	call   1180 <clock_gettime@plt>
    12e9:	48 69 44 24 40 00 ca 	imul   rax,QWORD PTR [rsp+0x40],0x3b9aca00
    12f0:	9a 3b 
    12f2:	c5 e1 57 db          	vxorpd xmm3,xmm3,xmm3
    12f6:	48 8d 35 e2 0d 00 00 	lea    rsi,[rip+0xde2]        # 20df <_IO_stdin_used+0xdf>
    12fd:	4c 29 f0             	sub    rax,r14
    1300:	48 03 44 24 48       	add    rax,QWORD PTR [rsp+0x48]
    1305:	4c 29 e8             	sub    rax,r13
    1308:	62 f1 e7 08 7b c0    	vcvtusi2sd xmm0,xmm3,rax
    130e:	bf 01 00 00 00       	mov    edi,0x1
    1313:	b8 01 00 00 00       	mov    eax,0x1
    1318:	31 db                	xor    ebx,ebx
    131a:	c5 fb 59 05 16 0e 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0xe16]        # 2138 <_IO_stdin_used+0x138>
    1321:	00 
    1322:	4c 8d 3d 47 03 00 00 	lea    r15,[rip+0x347]        # 1670 <_Z8dot_prodPfS_S_iii._omp_fn.0>
    1329:	4c 8d 35 10 0d 00 00 	lea    r14,[rip+0xd10]        # 2040 <_IO_stdin_used+0x40>
    1330:	e8 db fd ff ff       	call   1110 <__printf_chk@plt>
    1335:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
    133a:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
    133f:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    1344:	41 b9 00 02 00 00    	mov    r9d,0x200
    134a:	41 b8 00 02 00 00    	mov    r8d,0x200
    1350:	b9 40 00 00 00       	mov    ecx,0x40
    1355:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    1359:	e8 12 06 00 00       	call   1970 <_Z12matmul_naivePKfS0_Pfiii>
    135e:	c5 fa 11 5c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm3
    1364:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1368:	48 89 ee             	mov    rsi,rbp
    136b:	bf 04 00 00 00       	mov    edi,0x4
    1370:	e8 0b fe ff ff       	call   1180 <clock_gettime@plt>
    1375:	48 b8 40 00 00 00 00 	movabs rax,0x20000000040
    137c:	02 00 00 
    137f:	c5 f9 6f 74 24 10    	vmovdqa xmm6,XMMWORD PTR [rsp+0x10]
    1385:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    138a:	48 8b 44 24 20       	mov    rax,QWORD PTR [rsp+0x20]
    138f:	4c 69 64 24 40 00 ca 	imul   r12,QWORD PTR [rsp+0x40],0x3b9aca00
    1396:	9a 3b 
    1398:	4c 8b 6c 24 48       	mov    r13,QWORD PTR [rsp+0x48]
    139d:	48 89 44 24 50       	mov    QWORD PTR [rsp+0x50],rax
    13a2:	c5 f9 7f 74 24 40    	vmovdqa XMMWORD PTR [rsp+0x40],xmm6
    13a8:	c7 44 24 60 40 00 00 	mov    DWORD PTR [rsp+0x60],0x40
    13af:	00 
    13b0:	6a 00                	push   0x0
    13b2:	41 b9 01 00 00 00    	mov    r9d,0x1
    13b8:	41 b8 08 00 00 00    	mov    r8d,0x8
    13be:	6a 01                	push   0x1
    13c0:	31 c9                	xor    ecx,ecx
    13c2:	ba 08 00 00 00       	mov    edx,0x8
    13c7:	48 89 ee             	mov    rsi,rbp
    13ca:	4c 89 ff             	mov    rdi,r15
    13cd:	e8 4e fd ff ff       	call   1120 <GOMP_parallel_loop_nonmonotonic_dynamic@plt>
    13d2:	48 89 ee             	mov    rsi,rbp
    13d5:	bf 04 00 00 00       	mov    edi,0x4
    13da:	e8 a1 fd ff ff       	call   1180 <clock_gettime@plt>
    13df:	48 69 44 24 50 00 ca 	imul   rax,QWORD PTR [rsp+0x50],0x3b9aca00
    13e6:	9a 3b 
    13e8:	c5 c1 57 ff          	vxorpd xmm7,xmm7,xmm7
    13ec:	c5 fb 10 25 4c 0d 00 	vmovsd xmm4,QWORD PTR [rip+0xd4c]        # 2140 <_IO_stdin_used+0x140>
    13f3:	00 
    13f4:	4c 29 e8             	sub    rax,r13
    13f7:	48 03 44 24 58       	add    rax,QWORD PTR [rsp+0x58]
    13fc:	4c 29 e0             	sub    rax,r12
    13ff:	62 f1 c7 08 7b d0    	vcvtusi2sd xmm2,xmm7,rax
    1405:	ff c3                	inc    ebx
    1407:	4c 89 f6             	mov    rsi,r14
    140a:	bf 01 00 00 00       	mov    edi,0x1
    140f:	c5 eb 59 15 21 0d 00 	vmulsd xmm2,xmm2,QWORD PTR [rip+0xd21]        # 2138 <_IO_stdin_used+0x138>
    1416:	00 
    1417:	c5 eb 5a d2          	vcvtsd2ss xmm2,xmm2,xmm2
    141b:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    141f:	c5 db 5e c8          	vdivsd xmm1,xmm4,xmm0
    1423:	c5 fa 11 54 24 1c    	vmovss DWORD PTR [rsp+0x1c],xmm2
    1429:	58                   	pop    rax
    142a:	5a                   	pop    rdx
    142b:	b8 02 00 00 00       	mov    eax,0x2
    1430:	89 da                	mov    edx,ebx
    1432:	c5 f3 5e 0d 0e 0d 00 	vdivsd xmm1,xmm1,QWORD PTR [rip+0xd0e]        # 2148 <_IO_stdin_used+0x148>
    1439:	00 
    143a:	c5 f3 5a c9          	vcvtsd2ss xmm1,xmm1,xmm1
    143e:	c5 f2 5a c9          	vcvtss2sd xmm1,xmm1,xmm1
    1442:	e8 c9 fc ff ff       	call   1110 <__printf_chk@plt>
    1447:	c5 fa 10 54 24 0c    	vmovss xmm2,DWORD PTR [rsp+0xc]
    144d:	c5 ea 58 6c 24 08    	vaddss xmm5,xmm2,DWORD PTR [rsp+0x8]
    1453:	c5 fa 11 6c 24 08    	vmovss DWORD PTR [rsp+0x8],xmm5
    1459:	83 fb 14             	cmp    ebx,0x14
    145c:	0f 85 06 ff ff ff    	jne    1368 <main+0x188>
    1462:	c5 fb 10 1d d6 0c 00 	vmovsd xmm3,QWORD PTR [rip+0xcd6]        # 2140 <_IO_stdin_used+0x140>
    1469:	00 
    146a:	c5 d2 5e 05 be 0c 00 	vdivss xmm0,xmm5,DWORD PTR [rip+0xcbe]        # 2130 <_IO_stdin_used+0x130>
    1471:	00 
    1472:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    1476:	c5 e3 5e c8          	vdivsd xmm1,xmm3,xmm0
    147a:	48 8d 35 e7 0b 00 00 	lea    rsi,[rip+0xbe7]        # 2068 <_IO_stdin_used+0x68>
    1481:	bf 01 00 00 00       	mov    edi,0x1
    1486:	b8 02 00 00 00       	mov    eax,0x2
    148b:	c5 f3 5e 0d b5 0c 00 	vdivsd xmm1,xmm1,QWORD PTR [rip+0xcb5]        # 2148 <_IO_stdin_used+0x148>
    1492:	00 
    1493:	c5 f3 5a c9          	vcvtsd2ss xmm1,xmm1,xmm1
    1497:	c5 f2 5a c9          	vcvtss2sd xmm1,xmm1,xmm1
    149b:	e8 70 fc ff ff       	call   1110 <__printf_chk@plt>
    14a0:	bf 0a 00 00 00       	mov    edi,0xa
    14a5:	e8 16 fd ff ff       	call   11c0 <putchar@plt>
    14aa:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    14af:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    14b3:	c5 d2 5a 00          	vcvtss2sd xmm0,xmm5,DWORD PTR [rax]
    14b7:	c5 d2 5a 58 0c       	vcvtss2sd xmm3,xmm5,DWORD PTR [rax+0xc]
    14bc:	c5 d2 5a 50 08       	vcvtss2sd xmm2,xmm5,DWORD PTR [rax+0x8]
    14c1:	c5 d2 5a 48 04       	vcvtss2sd xmm1,xmm5,DWORD PTR [rax+0x4]
    14c6:	48 8d 35 2a 0c 00 00 	lea    rsi,[rip+0xc2a]        # 20f7 <_IO_stdin_used+0xf7>
    14cd:	bf 01 00 00 00       	mov    edi,0x1
    14d2:	b8 04 00 00 00       	mov    eax,0x4
    14d7:	e8 34 fc ff ff       	call   1110 <__printf_chk@plt>
    14dc:	48 8b 5c 24 20       	mov    rbx,QWORD PTR [rsp+0x20]
    14e1:	c5 d9 57 e4          	vxorpd xmm4,xmm4,xmm4
    14e5:	48 8d 35 27 0c 00 00 	lea    rsi,[rip+0xc27]        # 2113 <_IO_stdin_used+0x113>
    14ec:	bf 01 00 00 00       	mov    edi,0x1
    14f1:	b8 04 00 00 00       	mov    eax,0x4
    14f6:	c5 da 5a 03          	vcvtss2sd xmm0,xmm4,DWORD PTR [rbx]
    14fa:	c5 da 5a 5b 0c       	vcvtss2sd xmm3,xmm4,DWORD PTR [rbx+0xc]
    14ff:	c5 da 5a 53 08       	vcvtss2sd xmm2,xmm4,DWORD PTR [rbx+0x8]
    1504:	c5 da 5a 4b 04       	vcvtss2sd xmm1,xmm4,DWORD PTR [rbx+0x4]
    1509:	e8 02 fc ff ff       	call   1110 <__printf_chk@plt>
    150e:	48 8b 7c 24 30       	mov    rdi,QWORD PTR [rsp+0x30]
    1513:	e8 88 fc ff ff       	call   11a0 <free@plt>
    1518:	48 8b 7c 24 28       	mov    rdi,QWORD PTR [rsp+0x28]
    151d:	e8 7e fc ff ff       	call   11a0 <free@plt>
    1522:	48 89 df             	mov    rdi,rbx
    1525:	e8 76 fc ff ff       	call   11a0 <free@plt>
    152a:	48 8b 44 24 68       	mov    rax,QWORD PTR [rsp+0x68]
    152f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1536:	00 00 
    1538:	75 11                	jne    154b <main+0x36b>
    153a:	48 83 c4 78          	add    rsp,0x78
    153e:	5b                   	pop    rbx
    153f:	5d                   	pop    rbp
    1540:	41 5c                	pop    r12
    1542:	41 5d                	pop    r13
    1544:	41 5e                	pop    r14
    1546:	31 c0                	xor    eax,eax
    1548:	41 5f                	pop    r15
    154a:	c3                   	ret    
    154b:	e8 40 fc ff ff       	call   1190 <__stack_chk_fail@plt>

0000000000001550 <_GLOBAL__sub_I_temp>:
    1550:	f3 0f 1e fa          	endbr64 
    1554:	55                   	push   rbp
    1555:	48 8d 2d c4 2a 00 00 	lea    rbp,[rip+0x2ac4]        # 4020 <_ZStL8__ioinit>
    155c:	48 89 ef             	mov    rdi,rbp
    155f:	e8 6c fc ff ff       	call   11d0 <_ZNSt8ios_base4InitC1Ev@plt>
    1564:	48 8b 3d 8d 2a 00 00 	mov    rdi,QWORD PTR [rip+0x2a8d]        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    156b:	48 89 ee             	mov    rsi,rbp
    156e:	48 8d 15 93 2a 00 00 	lea    rdx,[rip+0x2a93]        # 4008 <__dso_handle>
    1575:	5d                   	pop    rbp
    1576:	e9 f5 fb ff ff       	jmp    1170 <__cxa_atexit@plt>
    157b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001580 <_start>:
    1580:	f3 0f 1e fa          	endbr64 
    1584:	31 ed                	xor    ebp,ebp
    1586:	49 89 d1             	mov    r9,rdx
    1589:	5e                   	pop    rsi
    158a:	48 89 e2             	mov    rdx,rsp
    158d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1591:	50                   	push   rax
    1592:	54                   	push   rsp
    1593:	45 31 c0             	xor    r8d,r8d
    1596:	31 c9                	xor    ecx,ecx
    1598:	48 8d 3d 41 fc ff ff 	lea    rdi,[rip+0xfffffffffffffc41]        # 11e0 <main>
    159f:	ff 15 33 2a 00 00    	call   QWORD PTR [rip+0x2a33]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    15a5:	f4                   	hlt    
    15a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    15ad:	00 00 00 

00000000000015b0 <deregister_tm_clones>:
    15b0:	48 8d 3d 61 2a 00 00 	lea    rdi,[rip+0x2a61]        # 4018 <__TMC_END__>
    15b7:	48 8d 05 5a 2a 00 00 	lea    rax,[rip+0x2a5a]        # 4018 <__TMC_END__>
    15be:	48 39 f8             	cmp    rax,rdi
    15c1:	74 15                	je     15d8 <deregister_tm_clones+0x28>
    15c3:	48 8b 05 16 2a 00 00 	mov    rax,QWORD PTR [rip+0x2a16]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    15ca:	48 85 c0             	test   rax,rax
    15cd:	74 09                	je     15d8 <deregister_tm_clones+0x28>
    15cf:	ff e0                	jmp    rax
    15d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    15d8:	c3                   	ret    
    15d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000015e0 <register_tm_clones>:
    15e0:	48 8d 3d 31 2a 00 00 	lea    rdi,[rip+0x2a31]        # 4018 <__TMC_END__>
    15e7:	48 8d 35 2a 2a 00 00 	lea    rsi,[rip+0x2a2a]        # 4018 <__TMC_END__>
    15ee:	48 29 fe             	sub    rsi,rdi
    15f1:	48 89 f0             	mov    rax,rsi
    15f4:	48 c1 ee 3f          	shr    rsi,0x3f
    15f8:	48 c1 f8 03          	sar    rax,0x3
    15fc:	48 01 c6             	add    rsi,rax
    15ff:	48 d1 fe             	sar    rsi,1
    1602:	74 14                	je     1618 <register_tm_clones+0x38>
    1604:	48 8b 05 e5 29 00 00 	mov    rax,QWORD PTR [rip+0x29e5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    160b:	48 85 c0             	test   rax,rax
    160e:	74 08                	je     1618 <register_tm_clones+0x38>
    1610:	ff e0                	jmp    rax
    1612:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1618:	c3                   	ret    
    1619:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001620 <__do_global_dtors_aux>:
    1620:	f3 0f 1e fa          	endbr64 
    1624:	80 3d ed 29 00 00 00 	cmp    BYTE PTR [rip+0x29ed],0x0        # 4018 <__TMC_END__>
    162b:	75 2b                	jne    1658 <__do_global_dtors_aux+0x38>
    162d:	55                   	push   rbp
    162e:	48 83 3d 9a 29 00 00 	cmp    QWORD PTR [rip+0x299a],0x0        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    1635:	00 
    1636:	48 89 e5             	mov    rbp,rsp
    1639:	74 0c                	je     1647 <__do_global_dtors_aux+0x27>
    163b:	48 8b 3d c6 29 00 00 	mov    rdi,QWORD PTR [rip+0x29c6]        # 4008 <__dso_handle>
    1642:	e8 b9 fa ff ff       	call   1100 <__cxa_finalize@plt>
    1647:	e8 64 ff ff ff       	call   15b0 <deregister_tm_clones>
    164c:	c6 05 c5 29 00 00 01 	mov    BYTE PTR [rip+0x29c5],0x1        # 4018 <__TMC_END__>
    1653:	5d                   	pop    rbp
    1654:	c3                   	ret    
    1655:	0f 1f 00             	nop    DWORD PTR [rax]
    1658:	c3                   	ret    
    1659:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001660 <frame_dummy>:
    1660:	f3 0f 1e fa          	endbr64 
    1664:	e9 77 ff ff ff       	jmp    15e0 <register_tm_clones>
    1669:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001670 <_Z8dot_prodPfS_S_iii._omp_fn.0>:
    1670:	f3 0f 1e fa          	endbr64 
    1674:	55                   	push   rbp
    1675:	48 89 e5             	mov    rbp,rsp
    1678:	41 57                	push   r15
    167a:	41 56                	push   r14
    167c:	41 55                	push   r13
    167e:	41 54                	push   r12
    1680:	53                   	push   rbx
    1681:	48 83 ec 28          	sub    rsp,0x28
    1685:	64 48 8b 14 25 28 00 	mov    rdx,QWORD PTR fs:0x28
    168c:	00 00 
    168e:	48 89 54 24 18       	mov    QWORD PTR [rsp+0x18],rdx
    1693:	31 d2                	xor    edx,edx
    1695:	44 8b 6f 20          	mov    r13d,DWORD PTR [rdi+0x20]
    1699:	44 8b 77 1c          	mov    r14d,DWORD PTR [rdi+0x1c]
    169d:	44 8b 7f 18          	mov    r15d,DWORD PTR [rdi+0x18]
    16a1:	4c 8d 64 24 10       	lea    r12,[rsp+0x10]
    16a6:	48 8d 5c 24 08       	lea    rbx,[rsp+0x8]
    16ab:	4c 89 e6             	mov    rsi,r12
    16ae:	48 89 df             	mov    rdi,rbx
    16b1:	e8 fa fa ff ff       	call   11b0 <GOMP_loop_nonmonotonic_dynamic_next@plt>
    16b6:	84 c0                	test   al,al
    16b8:	74 47                	je     1701 <_Z8dot_prodPfS_S_iii._omp_fn.0+0x91>
    16ba:	8b 4c 24 08          	mov    ecx,DWORD PTR [rsp+0x8]
    16be:	8b 7c 24 10          	mov    edi,DWORD PTR [rsp+0x10]
    16c2:	45 85 ed             	test   r13d,r13d
    16c5:	7e e4                	jle    16ab <_Z8dot_prodPfS_S_iii._omp_fn.0+0x3b>
    16c7:	45 85 ff             	test   r15d,r15d
    16ca:	7e df                	jle    16ab <_Z8dot_prodPfS_S_iii._omp_fn.0+0x3b>
    16cc:	31 f6                	xor    esi,esi
    16ce:	31 c0                	xor    eax,eax
    16d0:	31 d2                	xor    edx,edx
    16d2:	45 85 f6             	test   r14d,r14d
    16d5:	7e 10                	jle    16e7 <_Z8dot_prodPfS_S_iii._omp_fn.0+0x77>
    16d7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    16de:	00 00 
    16e0:	ff c2                	inc    edx
    16e2:	41 39 d6             	cmp    r14d,edx
    16e5:	75 f9                	jne    16e0 <_Z8dot_prodPfS_S_iii._omp_fn.0+0x70>
    16e7:	83 c0 08             	add    eax,0x8
    16ea:	41 39 c7             	cmp    r15d,eax
    16ed:	7f e1                	jg     16d0 <_Z8dot_prodPfS_S_iii._omp_fn.0+0x60>
    16ef:	83 c6 04             	add    esi,0x4
    16f2:	41 39 f5             	cmp    r13d,esi
    16f5:	7f d7                	jg     16ce <_Z8dot_prodPfS_S_iii._omp_fn.0+0x5e>
    16f7:	ff c1                	inc    ecx
    16f9:	39 cf                	cmp    edi,ecx
    16fb:	7e ae                	jle    16ab <_Z8dot_prodPfS_S_iii._omp_fn.0+0x3b>
    16fd:	31 f6                	xor    esi,esi
    16ff:	eb cd                	jmp    16ce <_Z8dot_prodPfS_S_iii._omp_fn.0+0x5e>
    1701:	e8 3a fa ff ff       	call   1140 <GOMP_loop_end_nowait@plt>
    1706:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    170b:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1712:	00 00 
    1714:	75 0f                	jne    1725 <_Z8dot_prodPfS_S_iii._omp_fn.0+0xb5>
    1716:	48 83 c4 28          	add    rsp,0x28
    171a:	5b                   	pop    rbx
    171b:	41 5c                	pop    r12
    171d:	41 5d                	pop    r13
    171f:	41 5e                	pop    r14
    1721:	41 5f                	pop    r15
    1723:	5d                   	pop    rbp
    1724:	c3                   	ret    
    1725:	e8 66 fa ff ff       	call   1190 <__stack_chk_fail@plt>
    172a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001730 <_ZL10_mm_mallocmm.constprop.0>:
    1730:	48 83 ec 18          	sub    rsp,0x18
    1734:	48 89 fa             	mov    rdx,rdi
    1737:	be 40 00 00 00       	mov    esi,0x40
    173c:	48 89 e7             	mov    rdi,rsp
    173f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1746:	00 00 
    1748:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    174d:	31 c0                	xor    eax,eax
    174f:	e8 fc f9 ff ff       	call   1150 <posix_memalign@plt>
    1754:	85 c0                	test   eax,eax
    1756:	b8 00 00 00 00       	mov    eax,0x0
    175b:	48 0f 44 04 24       	cmove  rax,QWORD PTR [rsp]
    1760:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    1765:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
    176c:	00 00 
    176e:	75 05                	jne    1775 <_ZL10_mm_mallocmm.constprop.0+0x45>
    1770:	48 83 c4 18          	add    rsp,0x18
    1774:	c3                   	ret    
    1775:	e8 16 fa ff ff       	call   1190 <__stack_chk_fail@plt>
    177a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001780 <_Z9init_randPfm>:
    1780:	f3 0f 1e fa          	endbr64 
    1784:	48 85 f6             	test   rsi,rsi
    1787:	74 37                	je     17c0 <_Z9init_randPfm+0x40>
    1789:	41 54                	push   r12
    178b:	49 89 fc             	mov    r12,rdi
    178e:	55                   	push   rbp
    178f:	48 89 f5             	mov    rbp,rsi
    1792:	53                   	push   rbx
    1793:	31 db                	xor    ebx,ebx
    1795:	0f 1f 00             	nop    DWORD PTR [rax]
    1798:	e8 93 f9 ff ff       	call   1130 <rand@plt>
    179d:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    17a1:	c5 f2 2a c0          	vcvtsi2ss xmm0,xmm1,eax
    17a5:	c5 fa 59 05 7f 09 00 	vmulss xmm0,xmm0,DWORD PTR [rip+0x97f]        # 212c <_IO_stdin_used+0x12c>
    17ac:	00 
    17ad:	c4 c1 7a 11 04 9c    	vmovss DWORD PTR [r12+rbx*4],xmm0
    17b3:	48 ff c3             	inc    rbx
    17b6:	48 39 dd             	cmp    rbp,rbx
    17b9:	75 dd                	jne    1798 <_Z9init_randPfm+0x18>
    17bb:	5b                   	pop    rbx
    17bc:	5d                   	pop    rbp
    17bd:	41 5c                	pop    r12
    17bf:	c3                   	ret    
    17c0:	c3                   	ret    
    17c1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    17c8:	00 00 00 00 
    17cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000017d0 <_Z5timerv>:
    17d0:	f3 0f 1e fa          	endbr64 
    17d4:	48 83 ec 28          	sub    rsp,0x28
    17d8:	48 89 e6             	mov    rsi,rsp
    17db:	bf 04 00 00 00       	mov    edi,0x4
    17e0:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    17e7:	00 00 
    17e9:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    17ee:	31 c0                	xor    eax,eax
    17f0:	e8 8b f9 ff ff       	call   1180 <clock_gettime@plt>
    17f5:	48 69 04 24 00 ca 9a 	imul   rax,QWORD PTR [rsp],0x3b9aca00
    17fc:	3b 
    17fd:	48 03 44 24 08       	add    rax,QWORD PTR [rsp+0x8]
    1802:	48 8b 54 24 18       	mov    rdx,QWORD PTR [rsp+0x18]
    1807:	64 48 2b 14 25 28 00 	sub    rdx,QWORD PTR fs:0x28
    180e:	00 00 
    1810:	75 05                	jne    1817 <_Z5timerv+0x47>
    1812:	48 83 c4 28          	add    rsp,0x28
    1816:	c3                   	ret    
    1817:	e8 74 f9 ff ff       	call   1190 <__stack_chk_fail@plt>
    181c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001820 <_Z13dot_prod_corePfS_S_iiii>:
    1820:	f3 0f 1e fa          	endbr64 
    1824:	55                   	push   rbp
    1825:	48 89 e5             	mov    rbp,rsp
    1828:	45 85 c9             	test   r9d,r9d
    182b:	7e 29                	jle    1856 <_Z13dot_prod_corePfS_S_iiii+0x36>
    182d:	85 c9                	test   ecx,ecx
    182f:	7e 25                	jle    1856 <_Z13dot_prod_corePfS_S_iiii+0x36>
    1831:	31 f6                	xor    esi,esi
    1833:	31 d2                	xor    edx,edx
    1835:	0f 1f 00             	nop    DWORD PTR [rax]
    1838:	31 c0                	xor    eax,eax
    183a:	45 85 c0             	test   r8d,r8d
    183d:	7e 08                	jle    1847 <_Z13dot_prod_corePfS_S_iiii+0x27>
    183f:	90                   	nop
    1840:	ff c0                	inc    eax
    1842:	41 39 c0             	cmp    r8d,eax
    1845:	75 f9                	jne    1840 <_Z13dot_prod_corePfS_S_iiii+0x20>
    1847:	83 c2 08             	add    edx,0x8
    184a:	39 d1                	cmp    ecx,edx
    184c:	7f ea                	jg     1838 <_Z13dot_prod_corePfS_S_iiii+0x18>
    184e:	83 c6 04             	add    esi,0x4
    1851:	41 39 f1             	cmp    r9d,esi
    1854:	7f dd                	jg     1833 <_Z13dot_prod_corePfS_S_iiii+0x13>
    1856:	5d                   	pop    rbp
    1857:	c3                   	ret    
    1858:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    185f:	00 

0000000000001860 <_Z8dot_prodPfS_S_iii>:
    1860:	f3 0f 1e fa          	endbr64 
    1864:	48 83 ec 38          	sub    rsp,0x38
    1868:	c4 e1 f9 6e d7       	vmovq  xmm2,rdi
    186d:	c5 f9 6e d9          	vmovd  xmm3,ecx
    1871:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1878:	00 00 
    187a:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
    187f:	31 c0                	xor    eax,eax
    1881:	c4 e3 e9 22 c6 01    	vpinsrq xmm0,xmm2,rsi,0x1
    1887:	c4 c3 61 22 c8 01    	vpinsrd xmm1,xmm3,r8d,0x1
    188d:	41 f6 c1 07          	test   r9b,0x7
    1891:	75 6e                	jne    1901 <_Z8dot_prodPfS_S_iii+0xa1>
    1893:	45 85 c9             	test   r9d,r9d
    1896:	41 8d 41 07          	lea    eax,[r9+0x7]
    189a:	41 0f 49 c1          	cmovns eax,r9d
    189e:	89 c6                	mov    esi,eax
    18a0:	c1 fe 03             	sar    esi,0x3
    18a3:	a8 18                	test   al,0x18
    18a5:	0f 85 99 00 00 00    	jne    1944 <_Z8dot_prodPfS_S_iii+0xe4>
    18ab:	83 e1 07             	and    ecx,0x7
    18ae:	75 75                	jne    1925 <_Z8dot_prodPfS_S_iii+0xc5>
    18b0:	89 74 24 20          	mov    DWORD PTR [rsp+0x20],esi
    18b4:	48 89 54 24 10       	mov    QWORD PTR [rsp+0x10],rdx
    18b9:	c5 f9 d6 4c 24 18    	vmovq  QWORD PTR [rsp+0x18],xmm1
    18bf:	c5 f9 7f 04 24       	vmovdqa XMMWORD PTR [rsp],xmm0
    18c4:	48 89 e6             	mov    rsi,rsp
    18c7:	6a 00                	push   0x0
    18c9:	ba 08 00 00 00       	mov    edx,0x8
    18ce:	41 b9 01 00 00 00    	mov    r9d,0x1
    18d4:	6a 01                	push   0x1
    18d6:	41 b8 08 00 00 00    	mov    r8d,0x8
    18dc:	31 c9                	xor    ecx,ecx
    18de:	48 8d 3d 8b fd ff ff 	lea    rdi,[rip+0xfffffffffffffd8b]        # 1670 <_Z8dot_prodPfS_S_iii._omp_fn.0>
    18e5:	e8 36 f8 ff ff       	call   1120 <GOMP_parallel_loop_nonmonotonic_dynamic@plt>
    18ea:	58                   	pop    rax
    18eb:	5a                   	pop    rdx
    18ec:	48 8b 44 24 28       	mov    rax,QWORD PTR [rsp+0x28]
    18f1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    18f8:	00 00 
    18fa:	75 24                	jne    1920 <_Z8dot_prodPfS_S_iii+0xc0>
    18fc:	48 83 c4 38          	add    rsp,0x38
    1900:	c3                   	ret    
    1901:	48 8d 0d 00 07 00 00 	lea    rcx,[rip+0x700]        # 2008 <_IO_stdin_used+0x8>
    1908:	ba 7f 00 00 00       	mov    edx,0x7f
    190d:	48 8d 35 73 07 00 00 	lea    rsi,[rip+0x773]        # 2087 <_IO_stdin_used+0x87>
    1914:	48 8d 3d 7b 07 00 00 	lea    rdi,[rip+0x77b]        # 2096 <_IO_stdin_used+0x96>
    191b:	e8 40 f8 ff ff       	call   1160 <__assert_fail@plt>
    1920:	e8 6b f8 ff ff       	call   1190 <__stack_chk_fail@plt>
    1925:	48 8d 0d dc 06 00 00 	lea    rcx,[rip+0x6dc]        # 2008 <_IO_stdin_used+0x8>
    192c:	ba 83 00 00 00       	mov    edx,0x83
    1931:	48 8d 35 4f 07 00 00 	lea    rsi,[rip+0x74f]        # 2087 <_IO_stdin_used+0x87>
    1938:	48 8d 3d 8a 07 00 00 	lea    rdi,[rip+0x78a]        # 20c9 <_IO_stdin_used+0xc9>
    193f:	e8 1c f8 ff ff       	call   1160 <__assert_fail@plt>
    1944:	48 8d 0d bd 06 00 00 	lea    rcx,[rip+0x6bd]        # 2008 <_IO_stdin_used+0x8>
    194b:	ba 82 00 00 00       	mov    edx,0x82
    1950:	48 8d 35 30 07 00 00 	lea    rsi,[rip+0x730]        # 2087 <_IO_stdin_used+0x87>
    1957:	48 8d 3d 4f 07 00 00 	lea    rdi,[rip+0x74f]        # 20ad <_IO_stdin_used+0xad>
    195e:	e8 fd f7 ff ff       	call   1160 <__assert_fail@plt>
    1963:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    196a:	00 00 00 00 
    196e:	66 90                	xchg   ax,ax

0000000000001970 <_Z12matmul_naivePKfS0_Pfiii>:
    1970:	f3 0f 1e fa          	endbr64 
    1974:	41 57                	push   r15
    1976:	41 56                	push   r14
    1978:	41 55                	push   r13
    197a:	41 54                	push   r12
    197c:	55                   	push   rbp
    197d:	53                   	push   rbx
    197e:	48 89 74 24 e0       	mov    QWORD PTR [rsp-0x20],rsi
    1983:	48 89 54 24 e8       	mov    QWORD PTR [rsp-0x18],rdx
    1988:	89 4c 24 f4          	mov    DWORD PTR [rsp-0xc],ecx
    198c:	85 c9                	test   ecx,ecx
    198e:	0f 8e a5 00 00 00    	jle    1a39 <_Z12matmul_naivePKfS0_Pfiii+0xc9>
    1994:	45 89 ce             	mov    r14d,r9d
    1997:	45 85 c9             	test   r9d,r9d
    199a:	0f 8e 99 00 00 00    	jle    1a39 <_Z12matmul_naivePKfS0_Pfiii+0xc9>
    19a0:	41 8d 40 ff          	lea    eax,[r8-0x1]
    19a4:	48 89 44 24 f8       	mov    QWORD PTR [rsp-0x8],rax
    19a9:	48 89 fb             	mov    rbx,rdi
    19ac:	45 31 ed             	xor    r13d,r13d
    19af:	45 31 e4             	xor    r12d,r12d
    19b2:	31 ed                	xor    ebp,ebp
    19b4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    19b8:	4d 63 c9             	movsxd r9,r9d
    19bb:	4c 8d 7f 04          	lea    r15,[rdi+0x4]
    19bf:	90                   	nop
    19c0:	49 63 c5             	movsxd rax,r13d
    19c3:	48 8b 74 24 e8       	mov    rsi,QWORD PTR [rsp-0x18]
    19c8:	4c 8d 1c 83          	lea    r11,[rbx+rax*4]
    19cc:	48 03 44 24 f8       	add    rax,QWORD PTR [rsp-0x8]
    19d1:	49 8d 0c 87          	lea    rcx,[r15+rax*4]
    19d5:	48 8b 7c 24 e0       	mov    rdi,QWORD PTR [rsp-0x20]
    19da:	49 63 c4             	movsxd rax,r12d
    19dd:	4c 8d 14 86          	lea    r10,[rsi+rax*4]
    19e1:	31 f6                	xor    esi,esi
    19e3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    19e8:	48 89 fa             	mov    rdx,rdi
    19eb:	4c 89 d8             	mov    rax,r11
    19ee:	c5 f8 28 c1          	vmovaps xmm0,xmm1
    19f2:	45 85 c0             	test   r8d,r8d
    19f5:	7e 22                	jle    1a19 <_Z12matmul_naivePKfS0_Pfiii+0xa9>
    19f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    19fe:	00 00 
    1a00:	c5 fa 10 10          	vmovss xmm2,DWORD PTR [rax]
    1a04:	48 83 c0 04          	add    rax,0x4
    1a08:	c4 e2 69 b9 02       	vfmadd231ss xmm0,xmm2,DWORD PTR [rdx]
    1a0d:	48 81 c2 00 08 00 00 	add    rdx,0x800
    1a14:	48 39 c1             	cmp    rcx,rax
    1a17:	75 e7                	jne    1a00 <_Z12matmul_naivePKfS0_Pfiii+0x90>
    1a19:	c4 c1 7a 11 04 b2    	vmovss DWORD PTR [r10+rsi*4],xmm0
    1a1f:	48 ff c6             	inc    rsi
    1a22:	48 83 c7 04          	add    rdi,0x4
    1a26:	49 39 f1             	cmp    r9,rsi
    1a29:	75 bd                	jne    19e8 <_Z12matmul_naivePKfS0_Pfiii+0x78>
    1a2b:	ff c5                	inc    ebp
    1a2d:	45 01 f4             	add    r12d,r14d
    1a30:	45 01 c5             	add    r13d,r8d
    1a33:	39 6c 24 f4          	cmp    DWORD PTR [rsp-0xc],ebp
    1a37:	75 87                	jne    19c0 <_Z12matmul_naivePKfS0_Pfiii+0x50>
    1a39:	5b                   	pop    rbx
    1a3a:	5d                   	pop    rbp
    1a3b:	41 5c                	pop    r12
    1a3d:	41 5d                	pop    r13
    1a3f:	41 5e                	pop    r14
    1a41:	41 5f                	pop    r15
    1a43:	c3                   	ret    

Disassembly of section .fini:

0000000000001a44 <_fini>:
    1a44:	f3 0f 1e fa          	endbr64 
    1a48:	48 83 ec 08          	sub    rsp,0x8
    1a4c:	48 83 c4 08          	add    rsp,0x8
    1a50:	c3                   	ret    
